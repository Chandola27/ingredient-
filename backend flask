from flask import Flask, request, render_template, jsonify, send_file
from werkzeug.utils import secure_filename
import os
import pytesseract
from PIL import Image
import matplotlib.pyplot as plt
import io

app = Flask(__name__)

UPLOAD_FOLDER = 'uploads'
RESULTS_FOLDER = 'results'
os.makedirs(UPLOAD_FOLDER, exist_ok=True)
os.makedirs(RESULTS_FOLDER, exist_ok=True)

app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

def extract_text(image_path):
    try:
        text = pytesseract.image_to_string(Image.open(image_path))
        return text
    except Exception as e:
        return f"Error extracting text: {str(e)}"

def analyze_ingredients(text):
    ingredients = text.split(',')[:5]
    percentages = [100 // len(ingredients)] * len(ingredients)
    return dict(zip(ingredients, percentages))

def generate_pie_chart(data):
    labels = list(data.keys())
    sizes = list(data.values())
    colors = plt.cm.tab20.colors[:len(labels)]

    plt.figure(figsize=(6, 6))
    plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=140)
    plt.axis('equal')

    chart_path = os.path.join(RESULTS_FOLDER, 'chart.png')
    plt.savefig(chart_path)
    plt.close()
    return chart_path

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/upload', methods=['POST'])
def upload():
    if 'image' not in request.files:
        return "No file part", 400

    file = request.files['image']
    if file.filename == '':
        return "No selected file", 400

    filename = secure_filename(file.filename)
    file_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
    file.save(file_path)

    text = extract_text(file_path)
    if text.startswith("Error"):
        return text, 500

    analysis = analyze_ingredients(text)
    chart_path = generate_pie_chart(analysis)

    return jsonify({
        "ingredients": analysis,
        "chart": f"/results/{os.path.basename(chart_path)}"
    })

@app.route('/results/<filename>')
def results(filename):
    return send_file(os.path.join(RESULTS_FOLDER, filename))

if __name__ == '__main__':
    app.run(debug=True)
